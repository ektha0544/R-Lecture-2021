getwd()
setwd('/Workspace/R')

# 변수(Variable)
x <- 1
y <- 2
z <- x + y
z

# Swapping() 두 변수의 값을 바꾸는 것
temp <- x
x <- y
y <- temp

# 변수의 타입
typeof(x) 

a <- 'string'
typeof(a)
b <- "double quote"
typeof(b)
c <- '한글'

# 실수(Numeric)
x <- 5
y <- 2
x / y

# 복소수(Complex) 
xi <- 1 + 2i
yi <- 1 - 2i
xi + yi
xi * yi

# 범주형(Category)
blood_type = factor(c('A','B','O','AB'))
blood_type

# 논리형(Boolean)
TRUE
FALSE
T
F

xinf = Inf
yinf = -Inf
xinf / yinf

# 데이터형 확인 함수
class(x)    # R 객체지향 관점
typeof(x)   # R 언어 자체 관점
is.integer(x) # 정수가 아니기 떄문에 F
is.numeric(x) # 실수가 맞기 때문에 T
is.complex(xi) # 복소수가 맞기 떄문에 T
is.character(c) # 한글이 맞기 때문에 T
is.na(xinf/yinf) # 괄호 안에 계산결과가 오게 할 수 있음 상수나 계산식, 숫자값 모두 가능 꼭 함수가 들어갈 필요는 없음

# 데이터형 변환 함수(as)
as.integer(x)
is.integer(as.integer(x)) # 정수로 변환
is.factor(as.factor(c)) # c를 factor로 변환

# 산술 연산자 (+, -, *, /, ^, **, %%, %/%) p83
5 ^ 2 # 지수승
4 ^ (1/2)

x %% y   # 나머지(Modulo)
x %/% y  # 몫

# 비교 연산자
x < y
x <= y
x >= y
x == y
x != y

# 논리 연산자 (|, ||, &)
!T # TRUE의 반대
!F # FALSE의 반대
x | y   # or 연산자
x & y   # and 연산자
x || y
a <- c(F, F, T, T)
b <- c(F, T, F, T)
a | b   # element-wise OR
a || b  # 첫 번째 엘리먼트의 논리합
a & b
a && b

# 연산자 우선순위
2^(-3)-5**(1/2)>2 # 2^(-3) - 5**(1/2) >2 : 우선순위가 불분명할 때는 괄호치기 


